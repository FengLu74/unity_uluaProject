module('TeamSelectProPanel', package.seeall)
-- 当前所在面板名字
local m_PanelName = 'TeamMatchPanel';
---------------------------------------label路径---------------------------------------

-----------------------------------------按钮路径--------------------------------------

-----------------------------------------Sprite路径------------------------------------
-- 遮罩
local m_MaskPath = "Mask";

----------------------------------gameobject所在的路径---------------------------------
-- 确定按钮
local m_ConfirmButtonPath = "Content/ConfirmButton";

----------------------------------通用的名称路径---------------------------------------
-- 列表
local m_ListPath = "Content/ListPanel/List";

-----------------------------------引用的对象------------------------------------------
-- 面板对象
local m_PanelObject = nil;
-- 是否创建成功
local m_CreateSuccess = false;
-- 列表
local m_List = nil;
-- 确定按钮
local m_ConfirmButton = nil;

local m_ProfessionIds = nil;
local m_ProInfo = nil;
local m_Callback = nil;

-----------------------------------一些写死的规定--------------------------------------

------------------------------------BaseLua调用的同名方法------------------------------
-- 初始化的内容放在start方法中
function Start()
    InitObjects();
    InitEvents();
    InitShow();
    m_CreateSuccess = true;
end

function OnEnable()
    if m_CreateSuccess then
        InitShow();
    end
end

function OnDisable()
    m_ProInfo = nil;
    m_Callback = nil;
end

function OnDestroy()
    m_PanelObject = nil;
    m_CreateSuccess = false;
	m_List = nil;
	m_ConfirmButton = nil;
    m_ProfessionIds = nil;
    
end
-----------------------------------本lua文件自调用方法--------------------------------

-- 初始化obj
function InitObjects()
    m_PanelObject = FindPanelObjWithPanelID(ENUMPANELID.ENUM_PANEL_TEAM_SELECTPRO_PANEL);
    m_List = GetComponent(m_PanelObject, m_ListPath, "UIListView");
    m_ConfirmButton = child(m_PanelObject, m_ConfirmButtonPath).gameObject;
    m_ProfessionIds = {
        PROFESSION_ID.ASSASSIN,
        PROFESSION_ID.FEILIBA,
        PROFESSION_ID.LOLI,
        PROFESSION_ID.WARDRAGONWHITE,
        TeamManager.MATCH_ALL_PRO_ID,
    };
end

-- 初始化对象事件
function InitEvents()
	SetGameObjectEvent(m_MaskPath, OnCloseClick, m_PanelObject);
    m_List:SetInitCallback(OnListViewInit);
    UIEventListener.Get(m_ConfirmButton).onClick = LuaHelper.OnClick(OnConfirmButtonClick);

end

-- 初始化显示信息
function InitShow()
    m_List:RemoveAll();
    local index = 0;
    for i, id in ipairs(m_ProfessionIds) do
        m_List:AddData(id);
        if m_ProInfo.proId == id then
            index = i - 1;
        end
    end
    m_List:LookAt(index, true);
end

------------------------------------------事件方法------------------------------------

-- 遮罩点击事件
function OnCloseClick(gameObject)
    closePanel(ENUMPANELID.ENUM_PANEL_TEAM_SELECTPRO_PANEL);
end

-- 列表初始化事件
function OnListViewInit(listView, cell, data)
    local go = cell.gameObject;
    local proId = data;
    if proId == TeamManager.MATCH_ALL_PRO_ID then
        SetLabelContent("Background/Label", --[[全部]]CCommonTool.GetTxtData(139).m_str, go);
        SetLabelContent("Toggle/Label", --[[全部]]CCommonTool.GetTxtData(139).m_str, go);
    else
        SetLabelTextByID("Background/Label", CCommonTool.GetRoleDateInfo(proId).NameTxt, go);
        SetLabelTextByID("Toggle/Label", CCommonTool.GetRoleDateInfo(proId).NameTxt, go);
    end
end

-- 确定按钮点击事件
function OnConfirmButtonClick(gameObject)
    local proId = m_List:GetData(m_List.selectedIndex);
    if proId ~= nil or proId ~= m_ProInfo.proId then
        m_ProInfo.proId = proId;
        if m_Callback ~= nil then
            m_Callback(m_ProInfo);
            closePanel(ENUMPANELID.ENUM_PANEL_TEAM_SELECTPRO_PANEL);
        end
    end
end

--------------------------外部调用的(或内部)更新此界面信息的方法----------------------

-- 选择职业
function SelectProfession(proInfo, callback)
    m_ProInfo = proInfo;
    m_Callback = callback;
    local panelId = ENUMPANELID.ENUM_PANEL_TEAM_SELECTPRO_PANEL;
    if IsOpenPanel(panelId) == 1 then
        InitShow();
    else
        createPanel(panelId, ENUMPANELID.ENUM_PANEL_TEAMPANEL);
    end
end

-- 跳转界面获取数据
function GetJumpCloseData()
    local panelParams = {};
    panelParams.proInfo = m_ProInfo;
    panelParams.callback = m_Callback;
    return panelParams;
end

-- 跳转界面设置数据
function SetJumpCloseData(paramTable)
    m_ProInfo = paramTable.proInfo;
    m_Callback = paramTable.callback;
end