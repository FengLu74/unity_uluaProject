module('FightFailPanel', package.seeall)
-- 当前所在面板名字
local m_PanelName = 'FightFailPanel';
---------------------------------------label路径---------------------------------------
-- 失败描述
local m_DescPath = "Content/Desc";
-- 倒计时Label
local m_TimeLabelPath = "Content/ButtonGrid/Giveup/GiveupButton/LableTable/TimeLabel";
-----------------------------------------按钮路径--------------------------------------
-- 放弃副本按钮
local m_GiveupButtonPath = "Content/ButtonGrid/Giveup/GiveupButton";
-----------------------------------------Sprite路径------------------------------------

----------------------------------gameobject所在的路径---------------------------------
-- 放弃副本父结点
local m_GiveupPath = "Content/ButtonGrid/Giveup";
-- 队伍成员面板
local m_TeamPath = "Content/Team";
-- 列表1
local m_Item1Path = "Item1";
-- 列表2
local m_Item2Path = "Item2";
-- 列表3
local m_Item3Path = "Item3";
-- 系统介绍面板
local m_SystemPath = "Content/System";

----------------------------------通用的名称路径---------------------------------------
-- 按钮Grid
local m_ButtonGridPath = "Content/ButtonGrid";
-- 好友Grid
local m_FriendGridPath = "Content/Team/Friends/Grid";
-- 系统Grid
local m_SystemGridPath = "Content/System/Content/Grid";
-- 离开副本按钮上的两个文本的Table组件
local m_LabelTablePath = "Content/ButtonGrid/Giveup/GiveupButton/LableTable";


-----------------------------------引用的对象------------------------------------------
-- 面板对象
local m_PanelObject = nil;
-- 是否创建成功
local m_CreateSuccess = false;
-- 按钮Grid
local m_ButtonGrid = nil;
-- 放弃副本父结点
local m_Giveup = nil;
-- 放弃副本按钮
local m_GiveupButton = nil;
-- 离开副本按钮上的两个文本的Table组件
local m_LabelTable = nil;
-- 队伍面板
local m_Team = nil;
-- 好友Grid
local m_FriendGrid = nil;
-- 系统面板
local m_System = nil;
-- 系统Grid
local m_SystemGrid = nil;

-- 三个列表项路径
local m_ItemPaths = nil;
-----------------------------------一些写死的规定--------------------------------------

local m_TimerEventName = "FightFailPanelTimer";
-- 倒计时30秒
local m_CountdownTime = 30;

------------------------------------BaseLua调用的同名方法------------------------------
-- 初始化的内容放在start方法中
function Start()
    InitObjects();
    InitEvents();
    InitShow();
    m_CreateSuccess = true;
end

function OnEnable()
    if m_CreateSuccess then
        InitShow();
    end
end

function OnDisable()
    G_TimerMng:RemoveTimeTask(m_TimerEventName);
end

function OnDestroy()
    m_PanelObject = nil;
    m_CreateSuccess = false;
	m_ButtonGrid = nil;
    m_Giveup = nil;
	m_GiveupButton = nil;
    m_LabelTable = nil;
    m_Team = nil;
	m_FriendGrid = nil;
	m_System = nil;
	m_SystemGrid = nil;
    m_ItemPaths = nil;

end
-----------------------------------本lua文件自调用方法--------------------------------
-- 初始化obj
function InitObjects()
    m_PanelObject = FindPanelObjWithPanelID(ENUMPANELID.ENUM_PANEL_FIGHTFAILPANEL);
    m_ButtonGrid = GetComponent(m_PanelObject, m_ButtonGridPath, "UIGrid");
    m_Giveup = child(m_PanelObject, m_GiveupPath).gameObject;
    m_LabelTable = GetComponent(m_PanelObject, m_LabelTablePath, "UITable");
    m_Team = child(m_PanelObject, m_TeamPath).gameObject;
    m_FriendGrid = GetComponent(m_PanelObject, m_FriendGridPath, "UIGrid");
    m_System = child(m_PanelObject, m_SystemPath).gameObject;
    m_SystemGrid = GetComponent(m_PanelObject, m_SystemGridPath, "UIGrid");

    SetLabelContent(m_DescPath, --[[勇者从不畏惧失败，当圣光普照之时再上征程！]]CCommonTool.GetTxtData(1033).m_str, m_PanelObject);
    m_ItemPaths = {m_Item1Path, m_Item2Path, m_Item3Path};
    
end

-- 初始化对象事件
function InitEvents()
    SetGameObjectEvent(m_GiveupButtonPath, OnGiveupButtonClick, m_PanelObject);

end

-- 初始化显示信息
function InitShow()
    InitCdLabel();
    InitMiddleItems();
end

function InitCdLabel()
    OnTimerUpdate(m_CountdownTime);
    AddTimerEvent(m_TimerEventName, m_CountdownTime, OnTimerOver, 5, OnTimerUpdate);
end

function InitMiddleItems()
    local isTeam = DungeonManager.IsTeamDungeon(G_SceneMng.ActivityID);
    if isTeam and TeamManager.GetTeamMemberCount() > 1 then
        m_Team:SetActive(true);
        m_System:SetActive(false);
        local members = TeamManager.GetTeamMembersExceptSelf();
        local go = m_FriendGrid.gameObject;
        for i = 1, 3 do
            local path = m_ItemPaths[i];
            if i <= #members then
                local mem = members[i];
                SetGameObjectState(path, true, go);
                SetLabelContent(path.."/Member/Name", mem.name, go);
                SetProfessionIcon(path.."/Member/Icon", mem.proId, go);
                SetLabelContent(path.."/Member/Level", mem.level, go);
                SetLabelContent(path.."/Member/Level", mem.level, go);
                SetGameObjectState(path.."/Member/Add", FriendsData.IsFriend(mem.id) == false, go);
                if FriendsData.IsFriend(mem.id) == false then
                    SetGameObjectEvent(path, function() OnTeamAddMemberClick(mem.id); end, go, nil);
                else
                    SetGameObjectEvent(path, function() OnTeamMemberClick(mem.id); end, go, nil);
                end
            else
                SetGameObjectState(path, false, go);
            end
        end
        m_FriendGrid:Reposition();
    else
        m_Team:SetActive(false);
        m_System:SetActive(true);
        local go = m_SystemGrid.gameObject;
        for i = 1, 3 do
            local path = m_ItemPaths[i];
            local prompts = RandomSystemItems();
            if i <= #prompts then
                local data = prompts[i];
                SetGameObjectState(path, true, go);
                SetLabelTextByID(path.."/Name", data.NameId, go);
                SetSpriteByAtlasID(path.."/Icon", data.PictureId, go);
                SetLabelTextByID(path.."/Desc", data.DescribeId, go);
            else
                SetGameObjectState(path, false, go);
            end
        end
        m_SystemGrid:Reposition();
    end
end

-- 随机失败系统提示数据
function RandomSystemItems()
    local clist = CCommonTool.GetAllLosePromptInfo();
    local count = clist.Count;
    local userLevel = G_UserInfo.RoleAttribute.Level;
    local items = {};
    for i = 0, count - 1 do
        local info = clist[i];
        if userLevel >= info.LevelMin and userLevel <= info.LevelMax then
            table.insert(items, info);
        end
    end
    while #items > 3 do
        table.remove(items, math.random(1, #items))
    end
    return items;
end

-- Timer更新事件
function OnTimerUpdate(second)
    SetLabelContent(m_TimeLabelPath, string_format("({0})", second), m_PanelObject);
    m_LabelTable:Reposition();
end

-- 倒计时结束, 退出副本
function OnTimerOver()
    DungeonProtocol.RequestLeaveDungeon();
    CloseThisPanel();
end

------------------------------------------事件方法------------------------------------

-- 放弃副本按钮点击事件
function OnGiveupButtonClick(gameObject)
    DungeonProtocol.RequestLeaveDungeon();
    CloseThisPanel();
end

-- 队伍成员点击事件
function OnTeamAddMemberClick(globalId)
    local isFriend = FriendsData.IsFriend(globalId);
    if isFriend then
        ShowSystemFlowTips(2904);
    else
        FriendsProtocol.RequestApply(globalId);
    end
end
function OnTeamMemberClick(globalId)
    ShowSystemFlowTips(2904);
end

--------------------------外部调用的(或内部)更新此界面信息的方法----------------------

function CloseThisPanel()
    closePanel(ENUMPANELID.ENUM_PANEL_FIGHTFAILPANEL);
end