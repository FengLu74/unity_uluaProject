module('DungeonBossPanel', package.seeall)
-- 当前所在面板名字
local m_PanelName = 'DungeonBossPanel';
---------------------------------------label路径---------------------------------------
-- 描述文本
local m_DescPath = "Info/Desc";
-- 副本名称
local m_NamePath = "Info/Name";
-- 副本难度
local m_DiffPath = "Info/Diff";
-- 推荐战力
local m_FightPowerPath = "Info/FightPower";
-- 推荐方式
local m_JoinTypePath = "Info/JoinType";
-- 次数
local m_TimesPath = "Info/Times";

-----------------------------------------按钮路径--------------------------------------
-- 进入副本按钮
local m_EnterButtonPath = "Info/EnterButton";
-- 组队平台按钮
local m_TeamButtonPath = "Info/TeamButton";

-----------------------------------------Sprite路径------------------------------------
-- 奖励1
local m_Item1Path = "Info/Items/Item1";
-- 奖励2
local m_Item2Path = "Info/Items/Item2";
-- 奖励3
local m_Item3Path = "Info/Items/Item3";
-- 奖励4
local m_Item4Path = "Info/Items/Item4";
-- 奖励5
local m_Item5Path = "Info/Items/Item5";

----------------------------------gameobject所在的路径---------------------------------
-- 难度Grid
local m_DiffGridPath = "Info/DiffGrid";

----------------------------------通用的名称路径---------------------------------------
-- 副本列表
local m_ListPath = "ListPanel/List";
-- 难度1
local m_Diff1Path = "Info/DiffGrid/Diff1";
-- 难度2
local m_Diff2Path = "Info/DiffGrid/Diff2";
-- 难度3
local m_Diff3Path = "Info/DiffGrid/Diff3";

-----------------------------------引用的对象------------------------------------------
-- 面板对象
local m_PanelObject = nil;
-- 是否创建成功
local m_CreateSuccess = false;
-- 副本列表
local m_List = nil;
-- 难度文本
local m_Diff = nil;
-- 推荐战力
local m_FightPower = nil;
-- 推荐方式
local m_JoinType = nil;
-- 次数
local m_Times = nil;
-- 难度Grid
local m_DiffGrid = nil;
-- 难度1
local m_Diff1 = nil;
-- 难度2
local m_Diff2 = nil;
-- 难度3
local m_Diff3 = nil;

-- 奖励路径数组
local m_ItemPaths = nil;
-- 难度数组
local m_DiffObjects = nil;
-- 当前选中的ID
local m_DungeonId = 0;
-- 当前选中的难度索引
local m_DiffIndex = 0;
-- 难度副本数组
local m_DiffDungeons = nil;
-- 模型ID
local m_ModelId = 0;

local m_ListIndex = 0;
-- 当前选中副本的难度个数
local m_DiffCount = 0;

-----------------------------------一些写死的规定--------------------------------------

------------------------------------BaseLua调用的同名方法------------------------------
-- 初始化的内容放在start方法中
function Start()
    InitObjects();
    InitEvents();
    InitShow();
    m_CreateSuccess = true;
end

function OnEnable()
    G_PanelMng:SetBackgroundShadow(false);
    if m_CreateSuccess then
        InitShow();
    end
end

function OnDisable()
    G_PanelMng:SetBackgroundShadow(true);
    m_ModelId = 0;
    m_DungeonId = 0;
    m_DiffIndex = 0;
    m_ListIndex = 0;
end

function OnDestroy()
    m_PanelObject = nil;
    m_CreateSuccess = false;
    m_List = nil;
    m_Diff = nil;
    m_FightPower = nil;
    m_JoinType = nil;
    m_Times = nil;
    m_DiffGrid = nil;
    m_Diff1 = nil;
    m_Diff2 = nil;
    m_Diff3 = nil;
    m_DungeonId = 0;
    m_DiffIndex = 0;
    m_DiffDungeons = nil;
    m_DiffObjects = nil;

end
-----------------------------------本lua文件自调用方法--------------------------------
-- 初始化obj
function InitObjects()
    m_PanelObject = FindPanelObjWithPanelID(ENUMPANELID.ENUM_PANEL_DUNGEONBOSSPANEL);
    m_List = GetComponent(m_PanelObject, m_ListPath, "UIListView");
    m_Diff = GetComponent(m_PanelObject, m_DiffPath, "UILabel");
    m_FightPower = GetComponent(m_PanelObject, m_FightPowerPath, "UILabel");
    m_JoinType = GetComponent(m_PanelObject, m_JoinTypePath, "UILabel");
    m_Times = GetComponent(m_PanelObject, m_TimesPath, "UILabel");
    m_DiffGrid = child(m_PanelObject, m_DiffGridPath).gameObject;
    m_Diff1 = child(m_PanelObject, m_Diff1Path).gameObject;
    m_Diff2 = child(m_PanelObject, m_Diff2Path).gameObject;
    m_Diff3 = child(m_PanelObject, m_Diff3Path).gameObject;

    m_ItemPaths = { m_Item1Path, m_Item2Path, m_Item3Path, m_Item4Path, m_Item5Path };
    m_DiffObjects = { m_Diff1, m_Diff2, m_Diff3 };
end

-- 初始化对象事件
function InitEvents()
    m_List:SetInitCallback(OnListViewInit);
    m_List:SetSelectedCallback(OnListViewSelected);
    SetGameObjectEvent(m_EnterButtonPath, OnEnterButtonClick, m_PanelObject);
    SetGameObjectEvent(m_TeamButtonPath, OnTeamButtonClick, m_PanelObject);

    UIEventListener.Get(m_Diff1).onClick = LuaHelper.OnClick(OnDiff1Changed);
    UIEventListener.Get(m_Diff2).onClick = LuaHelper.OnClick(OnDiff2Changed);
    UIEventListener.Get(m_Diff3).onClick = LuaHelper.OnClick(OnDiff3Changed);
end

-- 初始化列表数据
function InitList()
    m_List:RemoveAll();
    local dungeons = DungeonManager.GetBossDungeons();
    local levels = { };
    for _, data in ipairs(dungeons) do
        local lv = data.activity.openLevel;
        if levels[lv] == nil then
            error(lv);
            m_List:AddData(data);
            levels[lv] = true;
        end
    end
    if m_ListIndex >= m_List.dataCount then
        m_ListIndex = 0;
    end
    m_List:LookAt(m_ListIndex, true);
end

-- 初始化显示信息
function InitShow()
    InitList();
    InitDungeonTimes();
end

-- 初始化次数信息
function InitDungeonTimes()
    local remainTimes, usedTimes, maxTimes = DungeonManager.GetBossDungeonTimesInfo();
    m_Times.text = string_format(
    --[[ 次数:{0}/{1} ]]
    CCommonTool.GetTxtData(895).m_str, usedTimes, maxTimes);
end

-- 初始化选中副本的信息
function InitDungeonInfo(diffIndex)
    if m_DiffDungeons == nil then
        return;
    end

    for i, diffObject in ipairs(m_DiffObjects) do
        SetGameObjectState("Select", i == diffIndex, diffObject);
    end

    local data = m_DiffDungeons[diffIndex];
    local diffType = diffIndex;
    local info = data.info;
    if info == nil then
        m_DungeonId = 0;
        error(string_format("BOSS副本界面出错, info==nil"));
        return;
    end
    if info.Id == m_DungeonId then
        return;
    end
    m_DungeonId = info.Id;
    m_DiffIndex = diffIndex;
    SetLabelTextByID(m_NamePath, info.NameId, m_PanelObject);
    SetLabelTextByID(m_DescPath, info.DescId, m_PanelObject);
    m_FightPower.text = info.FightPower;
    m_JoinType.text =
    --[[ 组队挑战 ]]
    CCommonTool.GetTxtData(931).m_str;
    if diffType == 1 then
        m_Diff.text = string_format(" {0}", CCommonTool.GetTxtData(928).m_str);
        -- [FFFFFF]简单[-]
    elseif diffType == 2 then
        m_Diff.text = string_format(" {0}", CCommonTool.GetTxtData(929).m_str);
        -- [A6FF75]普通[-]
    elseif diffType == 3 then
        m_Diff.text = string_format(" {0}", CCommonTool.GetTxtData(930).m_str);
        -- [4699FF]困难[-]
    else
        m_Diff.text = "";
    end
    -- 获得奖励道具信息
    local list = CCommonTool.GetRewardShowItemIds(info.RewardId);
    local count = list.count;
    for i, path in ipairs(m_ItemPaths) do
        local itemObject = child(m_PanelObject, path).gameObject;
        itemObject:SetActive(i <= count);
        if i <= count then
            local excelId = list[i - 1];
            local num = 1;
            if excelId == G_ItemToolTipDefine.EXP then
                num = info.Exp;
            end
            SetItemShowByExcelIDV04(m_PanelObject, path, excelId, num, false, 2, ENUMPANELID.ENUM_PANEL_DUNGEONBOSSPANEL);
            SetItemToolTipsEvent(itemObject, "", ENUMPANELID.ENUM_PANEL_DUNGEONBOSSPANEL, false, excelId);
        end
    end

    -- 模型
    if m_ModelId ~= info.Model then
        if m_ModelId > 0 then
            Delete3DModel();
        end
        m_ModelId = info.Model;
        LoadBossModel(m_ModelId);
    end
end

function LoadBossModel(modelId)
    local buffer = ByteBuffer.New();
    buffer:WriteInt(ENUMPANELID.ENUM_PANEL_DUNGEONBOSSPANEL);
    buffer:WriteInt(modelId);
    G_PanelMng:SetSceneUIdataByLua(buffer);
end
-- 删除boss3d模型
function Delete3DModel()
    G_PanelMng:SetSceneUIObjNotShowByLua(ENUMPANELID.ENUM_PANEL_DUNGEONBOSSPANEL);
end

------------------------------------------事件方法------------------------------------

-- 副本列表初始化
function OnListViewInit(listView, cell, data)
    local info = data.info;
    local activity = data.activity;
    local go = cell.gameObject;
    SetLabelTextByID("Normal/Name", info.NameId, go);
    SetLabelTextByID("Select/Name", info.NameId, go);
    local userLevel = G_UserInfo.RoleAttribute.Level;
    local level = activity.openLevel;
    if userLevel >= level then
        SetLabelContent("Level", "[FEEF9C]" .. string_format(
        --[[ {0}级 ]]
        CCommonTool.GetTxtData(8056).m_str, level), go);
    else
        SetLabelContent("Level", "[FF3D3D]" .. string_format(
        --[[ {0}级 ]]
        CCommonTool.GetTxtData(8056).m_str, level), go);
    end
end

-- 副本列表选中事件
function OnListViewSelected(listView, dataIndex)
    m_ListIndex = dataIndex;
    local data = listView:GetData(dataIndex);
    local level = data.activity.openLevel;
    local dungeons = DungeonManager.GetBossDungeons();
    local count = 0;
    m_DiffDungeons = { };
    for _, data in ipairs(dungeons) do
        if data.activity.openLevel == level then
            table.insert(m_DiffDungeons, data);
            count = count + 1;
        end
    end
    m_DiffCount = count;
    CCommonTool.SetGameObjectGreyWithValue(m_Diff2, count < 2, 0.75, 0, 1, 0);
    CCommonTool.SetGameObjectGreyWithValue(m_Diff3, count < 3, 0.75, 0, 1, 0);
    -- m_Diff2:SetActive(count >= 2);
    -- m_Diff3:SetActive(count >= 3);

    local diffIndex = 1;
    if m_DiffIndex > 0 then
        if m_DiffIndex <= count then
            diffIndex = m_DiffIndex;
        end
    end
    InitDungeonInfo(diffIndex);
end

-- 进入副本按钮点击事件
function OnEnterButtonClick(gameObject)
    DungeonProtocol.RequestEnterDungeon(m_DungeonId);
end

-- 组队平台按钮点击事件
function OnTeamButtonClick(gameObject)
    -- TeamPanel.OpenThisPanelByTag(1);
    TeamPanel.OpenByDungeonId(m_DungeonId);
end

-- 难度1Toggle'OnChange事件
function OnDiff1Changed()
    InitDungeonInfo(1);
end

-- 难度2Toggle'OnChange事件
function OnDiff2Changed()
    if m_DiffCount >= 2 then
        InitDungeonInfo(2);
    end
end

-- 难度3Toggle'OnChange事件
function OnDiff3Changed()
    if m_DiffCount >= 3 then
        InitDungeonInfo(3);
    end
end

--------------------------外部调用的(或内部)更新此界面信息的方法----------------------

-- 关闭界面事件
function OnCloseClick()
    closePanel(ENUMPANELID.ENUM_PANEL_DUNGEONBOSSPANEL);
end

-- 跳转界面获取数据
function GetJumpCloseData()
    local panelParams = { };
    panelParams.listIndex = m_ListIndex;
    panelParams.diffIndex = m_DiffIndex;
    return panelParams;
end

-- 跳转界面设置数据
function SetJumpCloseData(paramTable)
    if paramTable == nil then
        return;
    end
    local panelParams = paramTable;
    m_ListIndex = panelParams.listIndex;
    m_DiffIndex = panelParams.diffIndex;
end