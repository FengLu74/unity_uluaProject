--[[
    field=Id, type=int, desc=主键ID
    field=JobId, type=int, desc=职业ID
    field=ModelId, type=int, desc=模型ID
]]
module("FirstChargeJobidMatchModleidTable", package.seeall)
local list={
    {Id=1,JobId=0,ModelId=14060},
    {Id=2,JobId=3,ModelId=12504},
    {Id=3,JobId=2,ModelId=12604},
    {Id=4,JobId=1,ModelId=12704},
    {Id=5,JobId=4,ModelId=12804}
};
local map = {[1]=list[1],[2]=list[2],[3]=list[3],[4]=list[4],[5]=list[5]};

count = 5;
Count = 5;

function Get(id)
    return map[id];
end

function GetAll()
    return list;
end

function Filter(action)
    local results = {};
    if type(action) == "function" then
        for i, data in ipairs(list) do
            if action(data) == true then
                table.insert(results, data)
            end
        end
    end
    return results;
end

function Find(cond)
    local result = nil;
    if type(cond) == "table" then
        for i, data in ipairs(list) do
            local find = false;
            for k, v in pairs(data) do
                if cond[k] ~= nil then
                    find = cond[k] == v;
                    if not find then
                        break;
                    end
                end
            end
            if find == true then
                result = data;
                break;
            end
        end
    end
    return result;
end

function FindAll(cond)
    local results = {};
    if type(cond) == "table" then
        for i, data in ipairs(list) do
            local find = false;
            for k, v in pairs(data) do
                if cond[k] ~= nil then
                    find = cond[k] == v;
                    if not find then
                        break;
                    end
                end
            end
            if find == true then
                table.insert(results, data);
            end
        end
    end
    return results;
end
