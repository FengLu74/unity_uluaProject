module("ChargeRewardProtocol", package.seeall)

-------------------------------------------------------处理接收协议 START-------------------------------------------------------
function RegisterProtocols()

    -- 发送首冲提取，月累计，周累计信息
    --network.Register(GMI_STOC_TAKE_GOLD_AWARD_MSG,OnTakeGoldAwardCfg);   --//


    -- 服务器通知客户端累积充值奖励领取数据
    network.Register(GMI_STOC_SEND_CLIENT_DEPOSIT_ACUAWARD_INIT,OnDepositAcuAwardInit);
    -- 服务器通知客户端累积充值数据改变
    network.Register(GMI_STOC_SEND_CLIENT_DEPOSIT_ACUMONEY,OnDepositMoneyChange);
    -- 服务器通知客户端累积充值领取返回
    network.Register(GMI_STOC_REQUEST_GET_DEPOSIT_ACUAWARD_RETURN,OnGetDepositAcuAwardReturn);
end


-------------------------------------------------------处理接收协议 END---------------------------------------------------------

function OnDepositAcuAwardInit(protocolId, buffer)
    --error("OnDepositAcuAwardInit_服务器通知客户端累积充值奖励领取数据");
    ChargeRewardManager.AccumulateRewardDatas = {};
    -- 累积钱
    local m_nAccumulateMoneyNum = buffer:ReadInt();
    --error("m_nAccumulateMoneyNum::"..m_nAccumulateMoneyNum);
    ChargeRewardManager.AccumulateMoneyNum = m_nAccumulateMoneyNum;
    -- 状态（领取状态）
    local m_nDepositAcuAwardState = buffer:ReadInt();
    --error("m_nDepositAcuAwardState::"..m_nDepositAcuAwardState);
    ChargeRewardManager.DepositAcuAwardState = m_nDepositAcuAwardState;
    --奖励道具数据列表
    local m_yDataSize = buffer:ReadByte();
    --error("m_yDataSize::"..m_yDataSize)
    for Index = 1,m_yDataSize do
        local m_nID = buffer:ReadInt();
        --error("m_nID::"..m_nID)
        local m_nAccumulateNum = buffer:ReadInt();
        --error("m_nAccumulateNum::"..m_nAccumulateNum);
        local m_nItemSize = buffer:ReadByte();
        --error("m_nItemSize::"..m_nItemSize);
        local itemDatas = {}; 
        for ItemIndex = 1,m_nItemSize do
            local m_nItemID = buffer:ReadInt();
            --error("m_nItemID::"..m_nItemID)
            local m_nItemNum = buffer:ReadInt();
            --error("m_nItemNum::"..m_nItemNum);
            itemDatas[ItemIndex]=
            {
                ItemId = m_nItemID;
                ItemNum = m_nItemNum;
            }
        end
        local data = 
        {
            Id = m_nID;
            AccumulateNum = m_nAccumulateNum;
            ItemDatas = itemDatas;
        };
        table.insert(ChargeRewardManager.AccumulateRewardDatas,data);
    end
end

function OnDepositMoneyChange(protocolId, buffer)
    -- 累积钱
    local m_nAccumulateMoneyNum = buffer:ReadInt();
    --error("m_nAccumulateMoneyNum::"..m_nAccumulateMoneyNum)
    ChargeRewardManager.AccumulateMoneyNum = m_nAccumulateMoneyNum;
   
end

function OnGetDepositAcuAwardReturn(protocolId, buffer)
    -- 状态
    local m_nDepositAcuAwardState = buffer:ReadInt();
    --error("m_nDepositAcuAwardState::"..m_nDepositAcuAwardState)
    ChargeRewardManager.DepositAcuAwardState = m_nDepositAcuAwardState;
    local result = ChargeRewardManager.GetChargeState();
    if result == true then
        ChargeRewardPanel.RefreshAccumulateChargeView();
    else
        Main_MiddleTop.InitButtonGroupsShowOut();
        closePanel(ENUMPANELID.ENUM_CHARGE_REWAR_PANEL);
    end
    --刷新当前首冲档位
    Main_MiddleTop.Set_AccumulateChargeView();
end
--[[
-- 发送首冲提取，月累计，周累计信息
function OnTakeGoldAwardCfg(protocolId, buffer)                      --//
    error("OnTakeGoldAwardCfg_发送首冲提取，月累计，周累计信息");
    local msgType = buffer:ReadUShort();
    error("msgType::"..msgType)
    local para1 = buffer:ReadUShort();
    error("para1::"..para1)
    local para2 = buffer:ReadUShort();
   error("para2::"..para2)
   if msgType == ENUM_TAKE_GOLD_AWARD_MSG.TAKE_GOLD_MSG_CFG then
        local yCount = buffer:ReadByte();
        error("yCount::"..yCount)
        for Index = 1,yCount do
            local switcher = buffer:ReadInt();
            error("switcher::"..switcher)
            local timeInterval = buffer:ReadInt();
            error("timeInterval::"..timeInterval)
            local beginTime = buffer:ReadInt64();
            error("beginTime::"..beginTime)
            local endTime = buffer:ReadInt64();
            error("endTime::"..endTime)
            local ySize = buffer:ReadByte();
           error("ySize::"..ySize)
            local rewardInfos = {};
            for Index2 = 1,ySize do
                local awardZone = buffer:ReadInt();
               error("awardZone::"..awardZone)
                local itemInfos = {};
                for Index3 = 1,5 do
                    local itemID = buffer:ReadInt();
                   error("itemID::"..itemID);
                    local itemNum = buffer:ReadInt();
                   error("itemNum::"..itemNum);
                    itemInfos[Index3] = 
                    {
                        ItemId = itemID;
                        ItemNum = itemNum;
                    };
                end
                local info = 
                {
                    AwardZone = awardZone;
                    ItemInfos = itemInfos;
                };
                rewardInfos[Index2] = info;
            end
            local rewardData = 
            {
                Switcher = switcher;
                TimeInterval = timeInterval;
                BeginTime = beginTime;
                EndTime = endTime;
                RewardInfos = rewardInfos;
            }
            ChargeRewardManager.ChargeRewardDatas[Index] = rewardData;
        end
    elseif msgType == ENUM_TAKE_GOLD_AWARD_MSG.TAKE_GOLD_MSG_TAKE_GOLD_INFO then
        if para1 == 0 then
            local yFirstTakeGoldState = buffer:ReadByte();
            error("yFirstTakeGoldState::"..yFirstTakeGoldState);
            ChargeRewardManager.FirstTakeGoldState = yFirstTakeGoldState;
            Main_MiddleTop.InitButtonGroupsShowOut();
            ChargeRewardPanel.RefreshChargeRewardPanel();
            local yCount = buffer:ReadByte();
            error("yCount::"..yCount)
            for Index = 1,yCount do
                local takeGold = buffer:ReadInt();
                error("takeGold::"..takeGold)
                local ySize = buffer:ReadByte();
                error("ySize::"..ySize)
                for Index1 = 1,ySize do
                    local nIsTake = buffer:ReadInt();
                    error("nIsTake::"..nIsTake)
                end
            end
        end
        
    elseif msgType == ENUM_TAKE_GOLD_AWARD_MSG.TAKE_GOLD_MSG_TAKE_GOLD_AWARD_R then
        local nType = para1; -- ENUM_TAKE_GOLD_OP_TYPE.TAKE_GOLD_OP_FIRST
        error("nType:::"..nType);
        local awardZone = buffer:ReadInt();
        error("awardZone:::"..awardZone);
        -- 如果nType为首冲，就将玩家的首冲状态置为2
        if nType == ENUM_TAKE_GOLD_OP_TYPE.TAKE_GOLD_OP_FIRST then
            ChargeRewardManager.FirstTakeGoldState = 2;
            error("FirstTakeGoldState============="..ChargeRewardManager.FirstTakeGoldState);
            --Main_MiddleTop.InitButtonGroupsShowOut();
            ChargeRewardPanel.RefreshChargeRewardPanel();
        end
    end
end
]]
-------------------------------------------------------处理协议请求 START-------------------------------------------------------
--[[领取首次充值奖励
function RequestReceiveFirstReward(value)
    local buffer = ByteBuffer.New();
    buffer:WriteUShort(GMI_CTOS_TAKE_GOLD_AWARD_MSG);
    buffer:WriteUShort(ENUM_TAKE_GOLD_AWARD_MSG.TAKE_GOLD_MSG_TAKE_GOLD_AWARD);
    buffer:WriteUShort(ENUM_TAKE_GOLD_OP_TYPE.TAKE_GOLD_OP_FIRST);
    error("value : "..value);
    buffer:WriteInt(value);
    G_NetWorkMng:SendMessage(buffer);
end]]


--领取累积充值奖励
function RequestReceiveReward(value)
    local buffer = ByteBuffer.New();
    buffer:WriteUShort(GMI_CTOS_REQUEST_GET_DEPOSIT_ACUAWARD);
    error("value : "..value);
    buffer:WriteInt(value);
    G_NetWorkMng:SendMessage(buffer);
end
-------------------------------------------------------处理协议请求 END-------------------------------------------------------